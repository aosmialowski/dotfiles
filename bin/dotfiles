#!/usr/bin/env bash

set -e

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1

ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_BLUE=$ESC_SEQ"34;01m"

function info () {
  echo -e "$COL_BLUE""RUNNING: $1$COL_RESET"
}
function success () {
  echo -e "$COL_GREEN""COMPLETED: $1$COL_RESET\n"
}

function error () {
  echo -e "$COL_RED""FAILED: $1$COL_RESET\n"
  exit 1
}

result () {
  if [[ "$1" -eq 0 ]]; then
      success "$2"
  else
      error "$2"
  fi

  return "$1"
}

help () {
  echo "Usage: $BIN_NAME <command>"
  echo
  echo "Commands:"
  echo "  backup           Backup list of installed Homebrew packages into Brewfile"
  echo "  clean            Clean up caches (Homebrew)"
  echo "  help             This help message"
  echo "  macos            Apply macOS system defaults"
  echo "  update           Update packages (macOS, homebrew)"
}

backup () {
  task='Generating Brewfile'
  info "$task"
  $(which brew) bundle --force --file=$DOTFILES/homebrew/Brewfile dump
  result $? "$task"
}

clean () {
  task='Cleaning up Homebrew packages'
  info "$task"
  $(which brew) cleanup
  result $? "$task"
}

macos () {
  task='Configuring macOS default preferences'
  info "$task"
  $HOME/.dotfiles/macos/defaults.sh
  result $? "$task"
}

update () {
  task='Updating macOS'
  sudo $(which softwareupdate) --install --all
  result $? "$task"

  task='Upgrading Homebrew'
  $(which brew) update
  result $? "$task"

  task='Updating Homebrew packages'
  $(which brew) upgrade
  result $? "$task"

  task='Updating zsh plugins'
  $(which antibody) update
  result $? "$task"
}

case $COMMAND_NAME in
  "" | "-h" | "--help")
    help
    ;;
  *)
    shift
    ${COMMAND_NAME} $@
    if [ $? = 127 ]; then
      echo -e "'$COMMAND_NAME' is not a known command or has errors." >&2
      help
      exit 1
    fi
    ;;
esac
